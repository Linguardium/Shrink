buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }

        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
//apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "${project.mc_version}-${project.mod_version}"
group = "${project.maven_group}"
archivesBaseName = "Shrink"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: "${project.mc_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "--mixin.config=shrink.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                shrink {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "--mixin.config=shrink.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                shrink {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'shrink', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                shrink {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "shrink.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
//    maven {
//        name "JEI"
//        url "http://dvs1.progwml6.com/files/maven"
//    }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

}


dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
    compileOnly("software.bernie.geckolib:${project.gekolib_version}")
    {
        transitive false
    }

//	runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.2-4.0.0.1")
//    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.2-4.0.0.1:api")
    // runtimeOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${project.jei_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.4-SNAPSHOT:processor'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs = [
            '-Xlint:deprecation', // deprecation, rawtypes, cast, unchecked, all
            '-Xlint:unchecked',
    ]
}

jar {
    manifest {
        attributes([
                "Specification-Title": archivesBaseName,
                    "Specification-Vendor": "gigabit101",
                    "Specification-Version": "${project.mod_version}",
                    "Implementation-Title": archivesBaseName,
                    "Implementation-Version": "${project.mod_version}",
                    "Implementation-Vendor" :"gigabit101",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "MixinConfigs": "shrink.mixins.json"
        ],)
    }
}
