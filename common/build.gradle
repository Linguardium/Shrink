plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "maven-publish"
}

loom {
    accessWidenerPath = file("src/main/resources/shrink.accesswidener")
}

configurations {
    shadowCommon
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.architectury.minecraft}"
    mappings loom.officialMojangMappings()

    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // We depend on fabric loader here to use the fabric @Environment annotations
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
}

architectury {
    common("fabric", "forge", "neoforge")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archiveFile)
    archiveClassifier = null

    from rootProject.file("LICENSE.md")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    repositories {

    }
}
